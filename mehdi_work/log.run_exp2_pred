11%22%33%44%55%66%77%88%100%100%
4%9%14%19%23%28%33%38%42%47%52%57%61%66%71%76%80%85%90%95%100%100%
4%9%14%19%23%28%33%38%42%47%52%57%61%66%71%76%80%85%90%95%100%100%
4%9%14%19%23%28%33%38%42%47%52%57%61%66%71%76%80%85%90%95%100%100%
Running experiment:
description = Test with 1D data, inspired by Duvenaud example,
data_dir = ./data/,
max_depth = 4,
random_order = False,
k = 1,
debug = False,
local_computation = True,
n_rand = 1,
sd = 2,
jitter_sd = 0.1,
max_jobs = 300,
verbose = False,
make_predictions = True,
skip_complete = False,
results_dir = ./results/,
iters = 250,
base_kernels = SE,RQ,Const,
additive_form = False,
mean = ff.MeanZero(),
kernel = ff.NoiseKernel(),
lik = ff.LikGauss(sf=-np.Inf),
verbose_results = False,
random_seed = 1,
period_heuristic = 5,
max_period_heuristic = 5,
subset = True,
subset_size = 250,
full_iters = 10,
bundle_size = 5,
search_operators = [('A', ('+', 'A', 'B'), {'A': 'kernel', 'B': 'base'}), ('A', 'B', {'A': 'kernel', 'B': 'base'}), ('A', ('*', 'A', 'B'), {'A': 'kernel', 'B': 'base-not-const'}), ('A', ('CP', 'd', 'A'), {'A': 'kernel', 'd': 'dimension'})],
score = bic,
period_heuristic_type = min,
stopping_criteria = [],
improvement_tolerance = 0.1,

Experiment test_1d
Output to: ./results/test_1d_result.txt


Starting search with this model:

GPModel(mean=MZ, kernel=WN(sf=None), likelihood=GS(sf=-inf))


All new results

NLL=2652742280598.0 BIC=5305484561204.5 AIC=5305484561202.0 PL2=156043663564.677 GPModel(mean=MZ, kernel=RQ(dim=0, ell=4.2, sf=-3.0, alpha=2.7), likelihood=GS(sf=-inf))
NLL=20.6 BIC=52.4 AIC=49.1 PL2=1.327 GPModel(mean=MZ, kernel=CP(dim=0, loc=319.9, steep=0.3, WN(sf=-0.1), WN(sf=-0.3)), likelihood=GS(sf=-inf))
NLL=20.7 BIC=44.2 AIC=43.3 PL2=1.246 GPModel(mean=MZ, kernel=WN(sf=-0.2), likelihood=GS(sf=-inf))
NLL=20.7 BIC=44.2 AIC=43.3 PL2=1.246 GPModel(mean=MZ, kernel=WN(sf=-0.2), likelihood=GS(sf=-inf))
NLL=11.9 BIC=29.5 AIC=27.9 PL2=0.760 GPModel(mean=MZ, kernel=SE(dim=0, ell=2.5, sf=-0.4), likelihood=GS(sf=-inf))
NLL=9.9 BIC=25.4 AIC=23.7 PL2=0.639 GPModel(mean=MZ, kernel=( C(sf=-0.3) + WN(sf=-1.0) ) , likelihood=GS(sf=-inf))
NLL=-5.1 BIC=1.2 AIC=-2.1 PL2=-0.181 GPModel(mean=MZ, kernel=( RQ(dim=0, ell=4.7, sf=-0.4, alpha=8.7) + WN(sf=-2.2) ) , likelihood=GS(sf=-inf))
NLL=-5.1 BIC=-1.6 AIC=-4.1 PL2=-0.210 GPModel(mean=MZ, kernel=( SE(dim=0, ell=4.7, sf=-0.4) + WN(sf=-2.2) ) , likelihood=GS(sf=-inf))

All new results

NLL=9.9 BIC=25.4 AIC=23.7 PL2=0.639 GPModel(mean=MZ, kernel=( C(sf=-0.3) + WN(sf=-1.0) ) , likelihood=GS(sf=-inf))
NLL=-5.1 BIC=6.9 AIC=1.9 PL2=-0.122 GPModel(mean=MZ, kernel=( RQ(dim=0, ell=6.7, sf=-5.3, alpha=0.4) + SE(dim=0, ell=4.7, sf=-0.4) + WN(sf=-2.2) ) , likelihood=GS(sf=-inf))
NLL=-5.6 BIC=5.8 AIC=0.8 PL2=-0.152 GPModel(mean=MZ, kernel=( CP(dim=0, loc=376.7, steep=0.6, WN(sf=-2.3), WN(sf=-1.9)) + SE(dim=0, ell=4.8, sf=-0.4) ) , likelihood=GS(sf=-inf))
NLL=-5.1 BIC=4.0 AIC=-0.1 PL2=-0.151 GPModel(mean=MZ, kernel=( ( SE(dim=0, ell=4.7, sf=-1.0) + WN(sf=-2.8) )  x RQ(dim=0, ell=7.5, sf=0.6, alpha=-1.1) ) , likelihood=GS(sf=-inf))
NLL=-5.1 BIC=4.0 AIC=-0.1 PL2=-0.151 GPModel(mean=MZ, kernel=( ( RQ(dim=0, ell=7.0, sf=0.8, alpha=1.0) x SE(dim=0, ell=4.7, sf=-1.3) )  + WN(sf=-2.2) ) , likelihood=GS(sf=-inf))
NLL=-5.1 BIC=4.0 AIC=-0.1 PL2=-0.151 GPModel(mean=MZ, kernel=( SE(dim=0, ell=4.7, sf=-0.8) + SE(dim=0, ell=4.7, sf=-0.8) + WN(sf=-2.2) ) , likelihood=GS(sf=-inf))
NLL=-5.1 BIC=1.2 AIC=-2.1 PL2=-0.180 GPModel(mean=MZ, kernel=( RQ(dim=0, ell=4.7, sf=-0.4, alpha=6.3) + WN(sf=-2.2) ) , likelihood=GS(sf=-inf))
NLL=-5.1 BIC=1.2 AIC=-2.1 PL2=-0.181 GPModel(mean=MZ, kernel=( SE(dim=0, ell=4.7, sf=-0.4) + C(sf=-6.5) + WN(sf=-2.2) ) , likelihood=GS(sf=-inf))
NLL=-5.1 BIC=1.2 AIC=-2.1 PL2=-0.181 GPModel(mean=MZ, kernel=( ( SE(dim=0, ell=5.0, sf=-0.2) + WN(sf=-1.9) )  x SE(dim=0, ell=5.2, sf=-0.2) ) , likelihood=GS(sf=-inf))
NLL=-5.1 BIC=-1.6 AIC=-4.1 PL2=-0.210 GPModel(mean=MZ, kernel=( SE(dim=0, ell=4.7, sf=-0.4) + WN(sf=-2.2) ) , likelihood=GS(sf=-inf))
NLL=-5.1 BIC=-1.6 AIC=-4.1 PL2=-0.210 GPModel(mean=MZ, kernel=( SE(dim=0, ell=4.7, sf=-0.4) + WN(sf=-2.2) ) , likelihood=GS(sf=-inf))
NLL=-5.1 BIC=-1.6 AIC=-4.1 PL2=-0.210 GPModel(mean=MZ, kernel=( SE(dim=0, ell=4.7, sf=-0.4) + WN(sf=-2.2) ) , likelihood=GS(sf=-inf))
NLL=-5.1 BIC=-1.6 AIC=-4.1 PL2=-0.210 GPModel(mean=MZ, kernel=( SE(dim=0, ell=4.7, sf=-0.4) + WN(sf=-2.2) ) , likelihood=GS(sf=-inf))

All new results

NLL=9.9 BIC=25.4 AIC=23.7 PL2=0.639 GPModel(mean=MZ, kernel=( C(sf=-0.3) + WN(sf=-1.0) ) , likelihood=GS(sf=-inf))
NLL=-5.1 BIC=6.9 AIC=1.9 PL2=-0.122 GPModel(mean=MZ, kernel=( RQ(dim=0, ell=4.8, sf=-3.4, alpha=2.1) + SE(dim=0, ell=4.7, sf=-0.4) + WN(sf=-2.2) ) , likelihood=GS(sf=-inf))
NLL=-5.1 BIC=4.0 AIC=-0.1 PL2=-0.151 GPModel(mean=MZ, kernel=( SE(dim=0, ell=4.7, sf=-0.4) + SE(dim=0, ell=9.2, sf=-5.0) + WN(sf=-2.2) ) , likelihood=GS(sf=-inf))
NLL=-5.1 BIC=4.0 AIC=-0.1 PL2=-0.151 GPModel(mean=MZ, kernel=( RQ(dim=0, ell=-0.7, sf=-2.2, alpha=1.9) + SE(dim=0, ell=4.7, sf=-0.4) ) , likelihood=GS(sf=-inf))
NLL=-5.1 BIC=4.0 AIC=-0.1 PL2=-0.151 GPModel(mean=MZ, kernel=( ( SE(dim=0, ell=4.7, sf=-1.2) + WN(sf=-2.9) )  x RQ(dim=0, ell=8.8, sf=0.8, alpha=-1.8) ) , likelihood=GS(sf=-inf))
NLL=-5.2 BIC=3.8 AIC=-0.4 PL2=-0.159 GPModel(mean=MZ, kernel=( ( RQ(dim=0, ell=5.2, sf=-0.5, alpha=-4.9) x SE(dim=0, ell=4.7, sf=0.0) )  + WN(sf=-2.3) ) , likelihood=GS(sf=-inf))
NLL=-7.8 BIC=1.5 AIC=-3.5 PL2=-0.281 GPModel(mean=MZ, kernel=( CP(dim=0, loc=425.0, steep=-3.1, WN(sf=-2.1), WN(sf=-16.3)) + SE(dim=0, ell=4.7, sf=-0.5) ) , likelihood=GS(sf=-inf))
NLL=-5.1 BIC=1.2 AIC=-2.1 PL2=-0.181 GPModel(mean=MZ, kernel=( RQ(dim=0, ell=4.7, sf=-0.4, alpha=8.5) + WN(sf=-2.2) ) , likelihood=GS(sf=-inf))
NLL=-5.1 BIC=1.2 AIC=-2.1 PL2=-0.181 GPModel(mean=MZ, kernel=( SE(dim=0, ell=4.7, sf=-0.4) + C(sf=-5.2) + WN(sf=-2.2) ) , likelihood=GS(sf=-inf))
NLL=-5.1 BIC=1.2 AIC=-2.1 PL2=-0.181 GPModel(mean=MZ, kernel=( ( SE(dim=0, ell=4.7, sf=-0.7) + WN(sf=-2.4) )  x SE(dim=0, ell=9.4, sf=0.3) ) , likelihood=GS(sf=-inf))
NLL=-5.1 BIC=-1.6 AIC=-4.1 PL2=-0.210 GPModel(mean=MZ, kernel=( SE(dim=0, ell=4.7, sf=-0.4) + WN(sf=-2.2) ) , likelihood=GS(sf=-inf))
NLL=-5.1 BIC=-1.6 AIC=-4.1 PL2=-0.210 GPModel(mean=MZ, kernel=( SE(dim=0, ell=4.7, sf=-0.4) + WN(sf=-2.2) ) , likelihood=GS(sf=-inf))
NLL=-5.1 BIC=-1.6 AIC=-4.1 PL2=-0.210 GPModel(mean=MZ, kernel=( SE(dim=0, ell=4.7, sf=-0.4) + WN(sf=-2.2) ) , likelihood=GS(sf=-inf))
NLL=-5.1 BIC=-1.6 AIC=-4.1 PL2=-0.210 GPModel(mean=MZ, kernel=( SE(dim=0, ell=4.7, sf=-0.4) + WN(sf=-2.2) ) , likelihood=GS(sf=-inf))

All new results

NLL=9.9 BIC=25.4 AIC=23.7 PL2=0.639 GPModel(mean=MZ, kernel=( C(sf=-0.3) + WN(sf=-1.0) ) , likelihood=GS(sf=-inf))
NLL=-5.3 BIC=6.4 AIC=1.4 PL2=-0.135 GPModel(mean=MZ, kernel=( RQ(dim=0, ell=3.2, sf=-2.5, alpha=10.6) + SE(dim=0, ell=4.7, sf=-0.4) + WN(sf=-2.3) ) , likelihood=GS(sf=-inf))
NLL=-5.8 BIC=5.3 AIC=0.3 PL2=-0.167 GPModel(mean=MZ, kernel=( CP(dim=0, loc=350.0, steep=-2.8, WN(sf=-2.3), WN(sf=-2.0)) + SE(dim=0, ell=4.8, sf=-0.4) ) , likelihood=GS(sf=-inf))
NLL=-5.1 BIC=4.0 AIC=-0.1 PL2=-0.151 GPModel(mean=MZ, kernel=( ( RQ(dim=0, ell=6.0, sf=-0.2, alpha=7.2) x SE(dim=0, ell=4.8, sf=-0.3) )  + WN(sf=-2.2) ) , likelihood=GS(sf=-inf))
NLL=-5.1 BIC=4.0 AIC=-0.1 PL2=-0.151 GPModel(mean=MZ, kernel=( ( SE(dim=0, ell=4.7, sf=-1.0) + WN(sf=-2.8) )  x RQ(dim=0, ell=6.8, sf=0.6, alpha=5.5) ) , likelihood=GS(sf=-inf))
NLL=-5.1 BIC=4.0 AIC=-0.1 PL2=-0.151 GPModel(mean=MZ, kernel=( RQ(dim=0, ell=-1.6, sf=-2.2, alpha=1.4) + SE(dim=0, ell=4.7, sf=-0.4) ) , likelihood=GS(sf=-inf))
NLL=-5.1 BIC=4.0 AIC=-0.1 PL2=-0.151 GPModel(mean=MZ, kernel=( SE(dim=0, ell=4.7, sf=-1.0) + SE(dim=0, ell=4.7, sf=-0.7) + WN(sf=-2.2) ) , likelihood=GS(sf=-inf))
NLL=-5.1 BIC=1.2 AIC=-2.1 PL2=-0.181 GPModel(mean=MZ, kernel=( RQ(dim=0, ell=4.7, sf=-0.4, alpha=11.1) + WN(sf=-2.2) ) , likelihood=GS(sf=-inf))
NLL=-5.1 BIC=1.2 AIC=-2.1 PL2=-0.181 GPModel(mean=MZ, kernel=( SE(dim=0, ell=4.7, sf=-0.4) + C(sf=-6.8) + WN(sf=-2.2) ) , likelihood=GS(sf=-inf))
NLL=-5.1 BIC=1.2 AIC=-2.1 PL2=-0.181 GPModel(mean=MZ, kernel=( ( SE(dim=0, ell=5.1, sf=0.4) + WN(sf=-1.4) )  x SE(dim=0, ell=5.1, sf=-0.8) ) , likelihood=GS(sf=-inf))
NLL=-5.1 BIC=-1.6 AIC=-4.1 PL2=-0.210 GPModel(mean=MZ, kernel=( SE(dim=0, ell=4.7, sf=-0.4) + WN(sf=-2.2) ) , likelihood=GS(sf=-inf))
NLL=-5.1 BIC=-1.6 AIC=-4.1 PL2=-0.210 GPModel(mean=MZ, kernel=( SE(dim=0, ell=4.7, sf=-0.4) + WN(sf=-2.2) ) , l100%100%
c]104[!p[?3;4l[4l>c]104[!p[?3;4l[4l>ikelihood=GS(sf=-inf))
NLL=-5.1 BIC=-1.6 AIC=-4.1 PL2=-0.210 GPModel(mean=MZ, kernel=( SE(dim=0, ell=4.7, sf=-0.4) + WN(sf=-2.2) ) , likelihood=GS(sf=-inf))
NLL=-5.1 BIC=-1.6 AIC=-4.1 PL2=-0.210 GPModel(mean=MZ, kernel=( SE(dim=0, ell=4.7, sf=-0.4) + WN(sf=-2.2) ) , likelihood=GS(sf=-inf))

Making predictions

Finished file test_1d
GPModel(mean=MZ, kernel=( SE(dim=0, ell=4.7, sf=-0.4) + WN(sf=-2.2) ) , likelihood=GS(sf=-inf))
Determining order of components
Saving to: /users/anhichem/sharedscratch/programming/gpss-research/mehdi_work/results/figures/test_1d/test_1d
['/opt/apps/MATLAB/R2021a/bin/matlab', '-nosplash', '', '-nodisplay']

Script file (/tmp/tmpJ6FEKR.m) contents : ==========================================

load '/tmp/tmpk_aZbH.mat'  % Load the data, it should contain X and y.
X = double(X);
y = double(y);

addpath(genpath('/users/anhichem/sharedscratch/programming/gpss-research/source/gpml'));
addpath(genpath('/users/anhichem/sharedscratch/programming/gpss-research/source/matlab'));

mean_family = {@meanZero};
mean_params = [  ];
kernel_family = {@covSum, {{@covSEiso}, {@covNoise}}};
kernel_params = [ 4.731720194475517 -0.4446498243817218 -2.167860554035329 ];
lik_family = {@likDelta};
lik_params = [  ];
kernel_family_list = { {@covSEiso},{@covNoise} };
kernel_params_list = { [ 4.731720194475517 -0.4446498243817218 ],[ -2.167860554035329 ] };
figname = '/users/anhichem/sharedscratch/programming/gpss-research/mehdi_work/results/figures/test_1d/test_1d';

order_by_mae_reduction(X, y, mean_family, mean_params, kernel_family, kernel_params, kernel_family_list, kernel_params_list, lik_family, lik_params, figname)
exit();

Std out : ==========================================

                            < M A T L A B (R) >
                  Copyright 1984-2021 The MathWorks, Inc.
             R2021a Update 4 (9.10.0.1710957) 64-bit (glnxa64)
                                July 1, 2021

 
To get started, type doc.
For product information, visit www.mathworks.com.
 
>> >> >> >> >> >> >> >> >> >> >> >> >> >> >> >> >> >> >> 
Plotting decomposition and computing basic stats
Saving to: /users/anhichem/sharedscratch/programming/gpss-research/mehdi_work/results/figures/test_1d/test_1d
['/opt/apps/MATLAB/R2021a/bin/matlab', '-nosplash', '', '-nodisplay']

Script file (/tmp/tmpjgvhZW.m) contents : ==========================================

load '/tmp/tmpLHHITr.mat'  % Load the data, it should contain X and y.
X = double(X);
y = double(y);

addpath(genpath('/users/anhichem/sharedscratch/programming/gpss-research/source/gpml'));
addpath(genpath('/users/anhichem/sharedscratch/programming/gpss-research/source/matlab'));

mean_family = {@meanZero};
mean_params = [  ];
kernel_family = {@covSum, {{@covSEiso}, {@covNoise}}};
kernel_params = [ 4.731720194475517 -0.4446498243817218 -2.167860554035329 ];
lik_family = {@likDelta};
lik_params = [  ];
kernel_family_list = { {@covSEiso},{@covNoise} };
kernel_params_list = { [ 4.731720194475517 -0.4446498243817218 ],[ -2.167860554035329 ] };
envelope_family_list = { {@covConst},{@covConst} };
envelope_params_list = { [ 0 ],[ 0 ] };
figname = '/users/anhichem/sharedscratch/programming/gpss-research/mehdi_work/results/figures/test_1d/test_1d';
idx = [ 1 2 ];

component_stats_and_plots(X, y, mean_family, mean_params, kernel_family, kernel_params, kernel_family_list, kernel_params_list, envelope_family_list, envelope_params_list, lik_family, lik_params, figname, idx)
exit();

Std out : ==========================================

                            < M A T L A B (R) >
                  Copyright 1984-2021 The MathWorks, Inc.
             R2021a Update 4 (9.10.0.1710957) 64-bit (glnxa64)
                                July 1, 2021

 
To get started, type doc.
For product information, visit www.mathworks.com.
 
>> >> >> >> >> >> >> >> >> >> >> >> >> >> >> >> >> >> >> >> >> >> 
Computing model checking stats
Saving to: /users/anhichem/sharedscratch/programming/gpss-research/mehdi_work/results/figures/test_1d/test_1d
['/opt/apps/MATLAB/R2021a/bin/matlab', '-nosplash', '', '-nodisplay']

Script file (/tmp/tmpG44bi5.m) contents : ==========================================

load '/tmp/tmpfRPTnE.mat'  % Load the data, it should contain X and y.
X = double(X);
y = double(y);

addpath(genpath('/users/anhichem/sharedscratch/programming/gpss-research/source/gpml'));
addpath(genpath('/users/anhichem/sharedscratch/programming/gpss-research/source/matlab'));

mean_family = {@meanZero};
mean_params = [  ];
kernel_family = {@covSum, {{@covSEiso}, {@covNoise}}};
kernel_params = [ 4.731720194475517 -0.4446498243817218 -2.167860554035329 ];
lik_family = {@likDelta};
lik_params = [  ];
kernel_family_list = { {@covSEiso},{@covNoise} };
kernel_params_list = { [ 4.731720194475517 -0.4446498243817218 ],[ -2.167860554035329 ] };
figname = '/users/anhichem/sharedscratch/programming/gpss-research/mehdi_work/results/figures/test_1d/test_1d';
idx = [ 1 2 ];
plot = true;

checking_stats(X, y, mean_family, mean_params, kernel_family, kernel_params, kernel_family_list, kernel_params_list, lik_family, lik_params, figname, idx, plot)
exit();

Std out : ==========================================

                            < M A T L A B (R) >
                  Copyright 1984-2021 The MathWorks, Inc.
             R2021a Update 4 (9.10.0.1710957) 64-bit (glnxa64)
                                July 1, 2021

 
To get started, type doc.
For product information, visit www.mathworks.com.
 
>> >> >> >> >> >> >> >> >> >> >> >> >> >> >> >> >> >> >> >> >> 
Traceback (most recent call last):
  File "run_experiment.py", line 31, in <module>
    rescale=False, data_folder='./data/', skip_kernel_evaluation=False, all_depths=False)
  File "/users/anhichem/sharedscratch/programming/gpss-research/source/postprocessing.py", line 190, in make_all_1d_figures
    (summary, sentences, extrap_sentences) = translation.translate_additive_component(kernel_components[component_order[i-1]], X, evaluation_data['monotonic'][i-1], evaluation_data['gradients'][i-1], unit)
IndexError: index 2 is out of bounds for axis 0 with size 2
